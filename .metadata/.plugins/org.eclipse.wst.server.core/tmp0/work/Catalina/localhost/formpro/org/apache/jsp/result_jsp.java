/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-05-27 09:41:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import aaa.bbb.ccc;
import com.oreilly.servlet.*;
import com.oreilly.servlet.multipart.*;
import java.util.*;
import java.io.*;

public final class result_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(10);
    _jspx_imports_packages.add("com.oreilly.servlet");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.oreilly.servlet.multipart");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("aaa.bbb.ccc");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");

	String uploadPath = application.getRealPath("/upload");
	MultipartRequest multi = new MultipartRequest(request,uploadPath, 5 * 1024 * 1024,
			"utf-8", new DefaultFileRenamePolicy());

    request.setCharacterEncoding("UTF-8");
    
    String filename = multi.getFilesystemName("filename");
    

    // 사용자 입력값 받기
    String studentId = multi.getParameter("studentId");
    String name = multi.getParameter("name");
    String phone1 = multi.getParameter("phone1");
    String phone2 = multi.getParameter("phone2");
    String phone3 = multi.getParameter("phone3");
    String fullphone = phone1+"-"+ phone2+"-"+phone3;
    String grade = multi.getParameter("grade");
    String sex = multi.getParameter("sex");
    String email = multi.getParameter("email");
    String emailaddress = multi.getParameter("emailaddress");
    String fullemail = email+"@"+emailaddress;
	String comment = multi.getParameter("comment");
	String[] subject = multi.getParameterValues("subject");
    // DTO 객체 생성 및 값 설정
    ccc student1 = new ccc();
    student1.setStudentId(studentId);
    student1.setName(name);
    student1.setPhone(fullphone);
    student1.setSex(sex);
    student1.setEmail(fullemail);
    student1.setGrade(grade);
    student1.setComment(comment);
    student1.setSubject(subject);
   

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head><title>결과</title></head>\r\n");
      out.write("<body>\r\n");
      out.write("    <h2>입력된 사용자 정보</h2>\r\n");
      out.write("    <table border = '1' cellpadding=\"10\">\r\n");
      out.write("    <tr>\r\n");
      out.write("    	<td>\r\n");
      out.write("    		");
 if(filename != null){ 
      out.write("\r\n");
      out.write("    		<img src = \"upload/");
      out.print(filename);
      out.write("\" alt= \"업로드한 사진\" width=\"100\"/>\r\n");
      out.write("    		");
}else {
      out.write("\r\n");
      out.write("    		<p>업로드된 사진 없음</p>\r\n");
      out.write("    		");
 } 
      out.write("\r\n");
      out.write(" 		</td>\r\n");
      out.write("   		<td>\r\n");
      out.write("    		<h2>학번: ");
      out.print( student1.getStudentId() );
      out.write("</h2>\r\n");
      out.write("    		<h2>이름: ");
      out.print( student1.getName() );
      out.write("</h2>\r\n");
      out.write("    	</td>\r\n");
      out.write("  	</tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("    <td colspan=\"2\">\r\n");
      out.write("    <p>전화번호: ");
      out.print( student1.getPhone() );
      out.write("</p>\r\n");
      out.write("    <p>성별: ");
      out.print( student1.getSex() == null ? "입력 안 함" : student1.getSex() );
      out.write("</p>\r\n");
      out.write("    <p>학년: ");
      out.print( student1.getGrade() );
      out.write("</p>\r\n");
      out.write("    <p>수강과목:\r\n");
      out.write("    ");

    	if (subject != null) {
    		for (int i = 0; i < subject.length; i++) {
        	out.print(subject[i] + " ");
   	 		}
		} else {
    		out.print("선택한 과목이 없습니다.");
		}	
	
      out.write("\r\n");
      out.write("	</p>\r\n");
      out.write("    <p>이메일: ");
      out.print(student1.getEmail() );
      out.write("</p>\r\n");
      out.write("    <p>소개: ");
      out.print( student1.getComment() );
      out.write("</p>\r\n");
      out.write("	<p> <a href=\"./form.jsp\">다시 입력하기</a></p>\r\n");
      out.write("	</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
